stages:
  - build
  - test
  - deploy

build:
  stage: build
  image:
    name: maven:3.8.2-openjdk-17
    pull_policy: if-not-present
  script:
    - echo "Compilando e installando il progetto multi-modulo..."
    - mvn clean install
    - echo "Contenuto della directory target dei moduli:"
    - find . -name "*.jar"
  artifacts:
    paths:
      - Entities/target/*.jar
      - Trucker/target/*.jar
      - Owner/target/*.jar
      - TruckParkingGateway/target/*.jar
      - Parking/target/*.jar
      - Booking/target/*.jar


test:
  stage: test
  image:
    name: maven:3.8.2-openjdk-17
    pull_policy: if-not-present
  script:
    - echo "Eseguendo l'installazione di tutti i moduli..."
    - mvn install -Dmaven.test.skip=true  # Installa tutti i moduli senza eseguire i test
    - echo "Eseguendo i test per il modulo Trucker..."
    - mvn -pl Trucker clean test
    - echo "Eseguendo i test per il modulo Owner..."
    - mvn -pl Owner clean test
    - echo "Eseguendo i test per il modulo Booking..."
    - mvn -pl Booking clean test
  artifacts:
    when: always
    paths:
      - Trucker/target/surefire-reports/*.xml
      - Owner/target/surefire-reports/*.xml
      - Booking/target/surefire-reports/*.xml

deploy:
  stage: deploy
  image:
    name: alpine
    pull_policy: if-not-present
  before_script:
    - echo "Setting environment..."
    - apk add --no-cache sshpass openssh-client
  script:
    - echo "Deploying application..."
    # Copia i file JAR dei moduli al server remoto
    - sshpass -p $SSH_PASSWORD scp -o StrictHostKeyChecking=no Entities/target/*.jar $SSH_USER@$MACHINE_IP:/home/$SSH_USER/Entities.jar
    - sshpass -p $SSH_PASSWORD scp -o StrictHostKeyChecking=no Trucker/target/*.jar $SSH_USER@$MACHINE_IP:/home/$SSH_USER/Trucker.jar
    - sshpass -p $SSH_PASSWORD scp -o StrictHostKeyChecking=no Owner/target/*.jar $SSH_USER@$MACHINE_IP:/home/$SSH_USER/Owner.jar
    - sshpass -p $SSH_PASSWORD scp -o StrictHostKeyChecking=no TruckParkingGateway/target/*.jar $SSH_USER@$MACHINE_IP:/home/$SSH_USER/TruckParkingGateway.jar
    - sshpass -p $SSH_PASSWORD scp -o StrictHostKeyChecking=no Parking/target/*.jar $SSH_USER@$MACHINE_IP:/home/$SSH_USER/Parking.jar
    - sshpass -p $SSH_PASSWORD scp -o StrictHostKeyChecking=no Booking/target/*.jar $SSH_USER@$MACHINE_IP:/home/$SSH_USER/Booking.jar


    - echo "Application successfully deployed."

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
